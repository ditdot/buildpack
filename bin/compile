#!/bin/sh

BUILD=$1
CACHE_VERSION=v1
CACHE_ROOT=$2
CACHE=$CACHE_ROOT/$CACHE_VERSION
ENV=$3

if [ ! -f $1/run ]; then
	echo "Missing $1/run"
	exit 1
fi

echo "Current stack: $STACK"

# echo "Create Procfile"
# echo 'web: ./run' > $BUILD/Procfile

if [ -d $CACHE/local ]; then

	echo "Build cache $CACHE_VERSION"

	rm -rf $ROOT_CACHE/*
	mkdir $CACHE/local

	echo "Install Node"
	curl -s http://nodejs.org/dist/v0.12.0/node-v0.12.0-linux-x64.tar.gz | tar -C $CACHE/local -xzf -
	export NODE_BIN=$CACHE/local/node-v0.12.0-linux-x64/bin

	echo "Install Go"
	curl -s https://storage.googleapis.com/golang/go1.4.2.linux-amd64.tar.gz | tar -C $CACHE/local -xzf -
	export GOROOT=$CACHE/local/go
	export GOPATH=$CACHE/go

	echo "Set environment"

	mkdir $GOPATH
	export PATH=$PATH:$CACHE/local/go/bin:$GOPATH/bin

	mkdir -p $CACHE/.profile.d
	echo '#extra vars
	export GOPATH=$HOME/go
	export GOROOT=$HOME/local/go
	export NODE_BIN=$HOME/local/node-v0.12.0-linux-x64/bin

	PATH=$PATH:$HOME/local/go/bin:$GOPATH/bin:$NODE_BIN
	' > $CACHE/.profile.d/vars.sh
fi

#setup from cache
cp -r $CACHE/.profile.d $BUILD
cp -r $CACHE/local $BUILD

#print versions
echo "node `node --version`"
go version

echo "Found run script '$BUILD/run'"
chmod +x $BUILD/run

if [ -f $BUILD/compile ]; then
	echo "running user compile script..."
	sh $BUILD/compile "$@"
	rm $BUILD/compile
fi

echo "Compiled!"

exit 0



